{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Visitor\\\\Documents\\\\email-builder\\\\src\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  _s();\n  // Define state using useState\n  const [template, setTemplate] = useState({\n    title: '',\n    content: '',\n    footer: '',\n    imageUrl: ''\n  });\n\n  // Fetch the email layout from the backend\n  const fetchLayout = async () => {\n    const res = await axios.get('http://localhost:5000/api/emails/getEmailLayout');\n    console.log(res.data); // Layout HTML, you can display this or process it\n  };\n\n  // Call fetchLayout once when component mounts\n  useEffect(() => {\n    fetchLayout();\n  }, []);\n\n  // Save the template to the backend\n  const saveTemplate = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/emails/uploadEmailConfig', template);\n      alert('Template saved!');\n    } catch (error) {\n      console.error('Error saving template:', error);\n      alert('Failed to save template.');\n    }\n  };\n\n  // Download the template as HTML\n  const downloadTemplate = async () => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/emails/renderAndDownloadTemplate', template, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'email_template.html');\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error('Error downloading template:', error);\n      alert('Failed to download template.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter Title\",\n      value: template.title,\n      onChange: e => setTemplate({\n        ...template,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      placeholder: \"Enter Content\",\n      value: template.content,\n      onChange: e => setTemplate({\n        ...template,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"footer\",\n      placeholder: \"Enter Footer\",\n      value: template.footer,\n      onChange: e => setTemplate({\n        ...template,\n        footer: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: async e => {\n        const formData = new FormData();\n        formData.append('image', e.target.files[0]); // Field name should match 'upload.single(\"image\")'\n\n        try {\n          const res = await axios.post('http://localhost:5000/api/emails/uploadImage', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('Image uploaded:', res.data.imageUrl);\n          setTemplate({\n            ...template,\n            imageUrl: res.data.imageUrl\n          });\n        } catch (error) {\n          console.error('Image upload failed:', error);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveTemplate,\n      children: \"Save Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadTemplate,\n      children: \"Download Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"LtytGKnRBTewBNYhpfHuOUIluvk=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Editor","_s","template","setTemplate","title","content","footer","imageUrl","fetchLayout","res","get","console","log","data","saveTemplate","post","alert","error","downloadTemplate","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","className","children","type","name","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","formData","FormData","append","files","headers","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Visitor/Documents/email-builder/src/Editor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Editor = () => {\r\n    // Define state using useState\r\n    const [template, setTemplate] = useState({\r\n      title: '',\r\n      content: '',\r\n      footer: '',\r\n      imageUrl: '',\r\n    });\r\n\r\n  // Fetch the email layout from the backend\r\n  const fetchLayout = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/emails/getEmailLayout');\r\n    console.log(res.data); // Layout HTML, you can display this or process it\r\n  };\r\n\r\n  // Call fetchLayout once when component mounts\r\n  useEffect(() => {\r\n    fetchLayout();\r\n  }, []);\r\n\r\n  // Save the template to the backend\r\n  const saveTemplate = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/emails/uploadEmailConfig', template);\r\n      alert('Template saved!');\r\n    } catch (error) {\r\n      console.error('Error saving template:', error);\r\n      alert('Failed to save template.');\r\n    }\r\n  };\r\n\r\n  // Download the template as HTML\r\n  const downloadTemplate = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/emails/renderAndDownloadTemplate',\r\n        template,\r\n        { responseType: 'blob' }\r\n      );\r\n      const url = window.URL.createObjectURL(new Blob([res.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'email_template.html');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    } catch (error) {\r\n      console.error('Error downloading template:', error);\r\n      alert('Failed to download template.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor\">\r\n      {/* Title Input */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Enter Title\"\r\n        value={template.title}\r\n        onChange={(e) => setTemplate({ ...template, title: e.target.value })}\r\n      />\r\n\r\n      {/* Content Textarea */}\r\n      <textarea\r\n        name=\"content\"\r\n        placeholder=\"Enter Content\"\r\n        value={template.content}\r\n        onChange={(e) => setTemplate({ ...template, content: e.target.value })}\r\n      />\r\n\r\n      {/* Footer Input */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"footer\"\r\n        placeholder=\"Enter Footer\"\r\n        value={template.footer}\r\n        onChange={(e) => setTemplate({ ...template, footer: e.target.value })}\r\n      />\r\n\r\n      {/* Image Upload */}\r\n      <input\r\n        type=\"file\"\r\n        onChange={async (e) => {\r\n          const formData = new FormData();\r\n          formData.append('image', e.target.files[0]); // Field name should match 'upload.single(\"image\")'\r\n\r\n          try {\r\n            const res = await axios.post('http://localhost:5000/api/emails/uploadImage', formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n              },\r\n            });\r\n            console.log('Image uploaded:', res.data.imageUrl);\r\n            setTemplate({ ...template, imageUrl: res.data.imageUrl });\r\n          } catch (error) {\r\n            console.error('Image upload failed:', error);\r\n          }\r\n        }}\r\n      />\r\n\r\n      {/* Save and Download Buttons */}\r\n      <button onClick={saveTemplate}>Save Template</button>\r\n      <button onClick={downloadTemplate}>Download Template</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}